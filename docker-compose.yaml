version: '3.8'

services:
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.6.3
    restart: unless-stopped
    hostname: "zookeeper"
    networks:
      - dc2ring
    ports:
      - "2181:2181" #interface
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc 127.0.0.1 2181"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka:7.2.0
    restart: unless-stopped
    hostname: "kafka1"
    networks:
      - dc2ring
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:29092,EXTERNAL://localhost:9092
      KAFKA_MESSAGE_MAX_BYTES: 2000000000
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LOG_SEGMENT_BYTES: 104857600
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server 127.0.0.1:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 4

  kafka2:
    container_name: kafka2
    image: confluentinc/cp-kafka:7.2.0
    restart: unless-stopped
    hostname: "kafka2"
    networks:
      - dc2ring
    ports:
      - "9093:9093"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:29093,EXTERNAL://localhost:9093
      KAFKA_MESSAGE_MAX_BYTES: 2000000000
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LOG_SEGMENT_BYTES: 104857600
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server 127.0.0.1:9093 --list"]
      interval: 30s
      timeout: 10s
      retries: 4

  kafka3:
    container_name: kafka3
    image: confluentinc/cp-kafka:7.2.0
    restart: unless-stopped
    hostname: "kafka3"
    networks:
      - dc2ring
    ports:
      - "9094:9094"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:29094,EXTERNAL://localhost:9094
      KAFKA_MESSAGE_MAX_BYTES: 2000000000
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LOG_SEGMENT_BYTES: 104857600
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server 127.0.0.1:9094 --list"]
      interval: 30s
      timeout: 10s
      retries: 4

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - dc2ring

  create-topics:
    container_name: create-topics
    image: confluentinc/cp-kafka:7.2.0
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    command: >
      bash -c "while ! echo exit | nc kafka1 9092; do sleep 1; done;
      kafka-topics --create --topic audio_topic --bootstrap-server kafka1:29092,kafka2:29093,kafka3:29094 --replication-factor 3 --partitions 3;
      kafka-topics --create --topic video_topic --bootstrap-server kafka1:29092,kafka2:29093,kafka3:29094 --replication-factor 3 --partitions 3;
      kafka-topics --create --topic text_topic --bootstrap-server kafka1:29092,kafka2:29093,kafka3:29094 --replication-factor 3 --partitions 3;
      kafka-topics --create --topic result_topic --bootstrap-server kafka1:29092,kafka2:29093,kafka3:29094 --replication-factor 3 --partitions 3;"
    networks:
      - dc2ring

  golang_service:
    build: ./backend
    container_name: golang_service
    ports:
      - "8080:8080"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - KAFKA_URL=kafka1:29092,kafka2:29093,kafka3:29094
    networks:
      - dc2ring
    depends_on:
      - kafka1
      - elasticsearch

  audio_service:
    build: ./machine-learning/audio_service
    container_name: audio_service
    environment:
      - KAFKA_URL=kafka1:29092,kafka2:29093,kafka3:29094
    networks:
      - dc2ring
    depends_on:
      - kafka1

  video_service:
    build: ./machine-learning/video_service
    container_name: video_service
    environment:
      - KAFKA_URL=kafka1:29092,kafka2:29093,kafka3:29094
    networks:
      - dc2ring
    depends_on:
      - kafka1

  text_service:
    build: ./machine-learning/text_service
    container_name: text_service
    environment:
      - KAFKA_URL=kafka1:29092,kafka2:29093,kafka3:29094
    networks:
      - dc2ring
    depends_on:
      - kafka1

networks:
  dc2ring:
